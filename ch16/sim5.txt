A simulation with no valid memory accesses can easily be achieved by setting
both limit registers to 0. For example:

    $ ./segmentation.py --b0 0 --b1 8 --l0 0 --l1 0 -A 0,1,2,3,4,5,6,7 \
                        -a 8 -n 10 -p 16 -c
    ARG seed 0
    ARG address space size 8
    ARG phys mem size 16

    Segment register information:

      Segment 0 base  (grows positive) : 0x00000000 (decimal 0)
      Segment 0 limit                  : 0

      Segment 1 base  (grows negative) : 0x00000008 (decimal 8)
      Segment 1 limit                  : 0

    Virtual Address Trace
      VA  0: 0x00000000 (decimal:    0) --> SEGMENTATION VIOLATION (SEG0)
      VA  1: 0x00000001 (decimal:    1) --> SEGMENTATION VIOLATION (SEG0)
      VA  2: 0x00000002 (decimal:    2) --> SEGMENTATION VIOLATION (SEG0)
      VA  3: 0x00000003 (decimal:    3) --> SEGMENTATION VIOLATION (SEG0)
      VA  4: 0x00000004 (decimal:    4) --> SEGMENTATION VIOLATION (SEG1)
      VA  5: 0x00000005 (decimal:    5) --> SEGMENTATION VIOLATION (SEG1)
      VA  6: 0x00000006 (decimal:    6) --> SEGMENTATION VIOLATION (SEG1)
      VA  7: 0x00000007 (decimal:    7) --> SEGMENTATION VIOLATION (SEG1)
