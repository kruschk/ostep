The SWITCH_ON_END option forces the two processes to run sequentially,
worsening run time. The entirety of process 0 must complete before process 1
may begin (despite most of process 0 being spent in the BLOCKED state),
yielding similar behaviour to that of the simulation in question 2.

    $ ./process-run.py -S SWITCH_ON_END -c -l 1:0,4:100 -p
    Time        PID: 0        PID: 1           CPU           IOs
      1         RUN:io         READY             1
      2        BLOCKED         READY                           1
      3        BLOCKED         READY                           1
      4        BLOCKED         READY                           1
      5        BLOCKED         READY                           1
      6        BLOCKED         READY                           1
      7*   RUN:io_done         READY             1
      8           DONE       RUN:cpu             1
      9           DONE       RUN:cpu             1
     10           DONE       RUN:cpu             1
     11           DONE       RUN:cpu             1

    Stats: Total Time 11
    Stats: CPU Busy 6 (54.55%)
    Stats: IO Busy  5 (45.45%)
